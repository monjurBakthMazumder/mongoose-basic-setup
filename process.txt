install process
--------------------------------
1. npm init -y
2. npm install express
3. npm i mongoose -save
4. npm install typescript --save-dev (development dependency )
5. npm i cors
6. npm i dotenv

--------------------------------
initialize typescript
--------------------------------
1. tsc -init
2. tsconfig.json >
    # "rootDir": "./src",
    # "outDir": "./dist",  
3. package.json >
    # "scripts": {
    "build": "tsc",
    }
4. npm run build

--------------------------------
Create server
--------------------------------
1. create src folder >
    # app.ts
    # server.ts


--------------------------------
environment variables
--------------------------------
1. create app folder in src
2. create config folder in app
3. create index.ts in config
> src > app > config > index.ts
> import dotenv from 'dotenv';

--------------------------------
Blog link
--------------------------------
https://dev.to/shafayat/-express-typescript-eslint-prettiersetup-5fhg

--------------------------------
Adding Eslint
--------------------------------
1. npm i -D eslint@9.14.0 @eslint/js @types/eslint__js typescript typescript-eslint
2. npx eslint --init
    # To check syntax and find problems
    # JavaScript modules (import/export)
    # None of these
    #  Does your project use TypeScript?  (Yes)
    #  Node (i)
    #  Would you like to install them now? Â» (Yes)
    # npm
3. npm remove eslint
4. npm i -D eslint@9.14.0 
5. package.json >
    # "scripts": {
        "lint": "eslint src/**/*.ts",
        "lint:fix": "eslint src/**/*.ts --fix"
    },

--------------------------------
Adding Prettier
--------------------------------
1. npm i -D --exact prettier
2 create file .prettierrc
    (add text in file)
    {
        "semi": true,
        "singleQuote": true
    }
3. create file .prettierignore
    # dist (add text in file)
    # node_modules (add text in file)

4. package.json >
    # "scripts": {
        "format": "prettier . --write"
    },



--------------------------------
Add ON > eslint.config.mjs
--------------------------------
{
    ignores: ['node_modules', 'dist'],
    rules: {
      'no-unused-vars': 'error',
      'no-unused-expression': 'error',
      'prefer-const': 'error',
      'no-console': 'warn',
      'no-undef': 'error',
    },
    globals: {
      process: 'readonly',
    },
  },
  

--------------------------------
Removed error
--------------------------------
# npm i --save-dev @types/express
# npm i --save-dev @types/cors

--------------------------------
npm i ts-node-dev --save-dev
--------------------------------
1. npm i ts-node-dev --save-dev
2. add on package.json 
    "scripts": {
        "start:dev":"ts-node-dev --respawn --transpile-only dist/server.js",
        "start-prod": "node ./dist/server.js",
    }
2. add on .env
    NODE_ENV= developmantnpm i
    